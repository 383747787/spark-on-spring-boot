buildscript {
    ext {
        springBootVersion = '1.2.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'jigsaw'
    version = '0.0.1-SNAPSHOT'
    archiveName = "${baseName}.jar"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
/*    maven {
        url 'http://repository.cloudera.com/artifactory/cloudera-repos/'
    }*/
}

/*configurations {
    runtime.exclude group: 'org.apache.hadoop'
    runtime.exclude group: 'org.apache.spark'
}*/


dependencies {
//    compile("org.apache.spark:spark-core_2.10:1.3.0-cdh5.4.7")

    compile("org.apache.spark:spark-core_2.10:1.5.1")
    compile("org.apache.spark:spark-sql_2.10:1.5.1")
    compile("com.databricks:spark-csv_2.10:1.2.0")

    compile("org.springframework.boot:spring-boot-starter") {
        exclude module : "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-batch") {
        exclude module : "logback-classic"
    }

    testCompile("org.springframework.boot:spring-boot-starter-test")

}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
